/******/ (() => { // webpackBootstrap
var __webpack_exports__ = {};
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
var form = document.createElement('form');
var labelExpensesText = document.createElement('label');
var inputExpensesText = document.createElement('input');
var labelExpensesValue = document.createElement('label');
var inputExpensesValue = document.createElement('input');
var submit = document.createElement('input');
var divList = document.createElement('div');
var list = document.createElement('ul');
labelExpensesText.htmlFor = 'expensesText';
labelExpensesText.innerText = 'Spent money on:';
inputExpensesText.type = 'text';
inputExpensesText.name = 'expensesText';
labelExpensesValue.htmlFor = 'expensesValue';
labelExpensesValue.innerText = 'Amount of money:';
inputExpensesValue.type = 'number';
inputExpensesValue.name = 'expensesValue';
submit.type = 'submit';
submit.value = 'Submit';
form.append(labelExpensesText);
form.append(document.createElement('br'));
form.append(inputExpensesText);
form.append(document.createElement('br'));
form.append(labelExpensesValue);
form.append(document.createElement('br'));
form.append(inputExpensesValue);
form.append(document.createElement('br'));
form.append(document.createElement('br'));
form.append(submit);
divList.append(list);
console.log(form);
document.body.append(form);
document.body.append(divList);
form.addEventListener('submit', function (event) {
  if (form.elements.expensesText.value && form.elements.expensesValue.value) {
    var li = document.createElement('li');
    li.innerHTML = "".concat(form.elements.expensesText.value, " ").concat(form.elements.expensesValue.value);
    list.append(li);
    form.reset();
  } else {
    alert('Invalid input!');
  }

  event.preventDefault();
});
/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZXJhLXByYWN0aWNlLy4vc3JjL2luZGV4LmpzIl0sIm5hbWVzIjpbImZvcm0iLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJsYWJlbEV4cGVuc2VzVGV4dCIsImlucHV0RXhwZW5zZXNUZXh0IiwibGFiZWxFeHBlbnNlc1ZhbHVlIiwiaW5wdXRFeHBlbnNlc1ZhbHVlIiwic3VibWl0IiwiZGl2TGlzdCIsImxpc3QiLCJodG1sRm9yIiwiaW5uZXJUZXh0IiwidHlwZSIsIm5hbWUiLCJ2YWx1ZSIsImFwcGVuZCIsImNvbnNvbGUiLCJsb2ciLCJib2R5IiwiYWRkRXZlbnRMaXN0ZW5lciIsImV2ZW50IiwiZWxlbWVudHMiLCJleHBlbnNlc1RleHQiLCJleHBlbnNlc1ZhbHVlIiwibGkiLCJpbm5lckhUTUwiLCJyZXNldCIsImFsZXJ0IiwicHJldmVudERlZmF1bHQiXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsSUFBTUEsSUFBSSxHQUFHQyxRQUFRLENBQUNDLGFBQVQsQ0FBdUIsTUFBdkIsQ0FBYjtBQUNBLElBQU1DLGlCQUFpQixHQUFHRixRQUFRLENBQUNDLGFBQVQsQ0FBdUIsT0FBdkIsQ0FBMUI7QUFDQSxJQUFNRSxpQkFBaUIsR0FBR0gsUUFBUSxDQUFDQyxhQUFULENBQXVCLE9BQXZCLENBQTFCO0FBQ0EsSUFBTUcsa0JBQWtCLEdBQUdKLFFBQVEsQ0FBQ0MsYUFBVCxDQUF1QixPQUF2QixDQUEzQjtBQUNBLElBQU1JLGtCQUFrQixHQUFHTCxRQUFRLENBQUNDLGFBQVQsQ0FBdUIsT0FBdkIsQ0FBM0I7QUFDQSxJQUFNSyxNQUFNLEdBQUdOLFFBQVEsQ0FBQ0MsYUFBVCxDQUF1QixPQUF2QixDQUFmO0FBQ0EsSUFBTU0sT0FBTyxHQUFHUCxRQUFRLENBQUNDLGFBQVQsQ0FBdUIsS0FBdkIsQ0FBaEI7QUFDQSxJQUFNTyxJQUFJLEdBQUdSLFFBQVEsQ0FBQ0MsYUFBVCxDQUF1QixJQUF2QixDQUFiO0FBRUFDLGlCQUFpQixDQUFDTyxPQUFsQixHQUE0QixjQUE1QjtBQUNBUCxpQkFBaUIsQ0FBQ1EsU0FBbEIsR0FBOEIsaUJBQTlCO0FBQ0FQLGlCQUFpQixDQUFDUSxJQUFsQixHQUF5QixNQUF6QjtBQUNBUixpQkFBaUIsQ0FBQ1MsSUFBbEIsR0FBeUIsY0FBekI7QUFDQVIsa0JBQWtCLENBQUNLLE9BQW5CLEdBQTZCLGVBQTdCO0FBQ0FMLGtCQUFrQixDQUFDTSxTQUFuQixHQUErQixrQkFBL0I7QUFDQUwsa0JBQWtCLENBQUNNLElBQW5CLEdBQTBCLFFBQTFCO0FBQ0FOLGtCQUFrQixDQUFDTyxJQUFuQixHQUEwQixlQUExQjtBQUNBTixNQUFNLENBQUNLLElBQVAsR0FBYyxRQUFkO0FBQ0FMLE1BQU0sQ0FBQ08sS0FBUCxHQUFlLFFBQWY7QUFFQWQsSUFBSSxDQUFDZSxNQUFMLENBQVlaLGlCQUFaO0FBQ0FILElBQUksQ0FBQ2UsTUFBTCxDQUFZZCxRQUFRLENBQUNDLGFBQVQsQ0FBdUIsSUFBdkIsQ0FBWjtBQUNBRixJQUFJLENBQUNlLE1BQUwsQ0FBWVgsaUJBQVo7QUFDQUosSUFBSSxDQUFDZSxNQUFMLENBQVlkLFFBQVEsQ0FBQ0MsYUFBVCxDQUF1QixJQUF2QixDQUFaO0FBQ0FGLElBQUksQ0FBQ2UsTUFBTCxDQUFZVixrQkFBWjtBQUNBTCxJQUFJLENBQUNlLE1BQUwsQ0FBWWQsUUFBUSxDQUFDQyxhQUFULENBQXVCLElBQXZCLENBQVo7QUFDQUYsSUFBSSxDQUFDZSxNQUFMLENBQVlULGtCQUFaO0FBQ0FOLElBQUksQ0FBQ2UsTUFBTCxDQUFZZCxRQUFRLENBQUNDLGFBQVQsQ0FBdUIsSUFBdkIsQ0FBWjtBQUNBRixJQUFJLENBQUNlLE1BQUwsQ0FBWWQsUUFBUSxDQUFDQyxhQUFULENBQXVCLElBQXZCLENBQVo7QUFDQUYsSUFBSSxDQUFDZSxNQUFMLENBQVlSLE1BQVo7QUFDQUMsT0FBTyxDQUFDTyxNQUFSLENBQWVOLElBQWY7QUFDQU8sT0FBTyxDQUFDQyxHQUFSLENBQVlqQixJQUFaO0FBQ0FDLFFBQVEsQ0FBQ2lCLElBQVQsQ0FBY0gsTUFBZCxDQUFxQmYsSUFBckI7QUFDQUMsUUFBUSxDQUFDaUIsSUFBVCxDQUFjSCxNQUFkLENBQXFCUCxPQUFyQjtBQUVBUixJQUFJLENBQUNtQixnQkFBTCxDQUFzQixRQUF0QixFQUFnQyxVQUFDQyxLQUFELEVBQVc7QUFDMUMsTUFBSXBCLElBQUksQ0FBQ3FCLFFBQUwsQ0FBY0MsWUFBZCxDQUEyQlIsS0FBM0IsSUFBb0NkLElBQUksQ0FBQ3FCLFFBQUwsQ0FBY0UsYUFBZCxDQUE0QlQsS0FBcEUsRUFBMkU7QUFDMUUsUUFBTVUsRUFBRSxHQUFHdkIsUUFBUSxDQUFDQyxhQUFULENBQXVCLElBQXZCLENBQVg7QUFDQXNCLE1BQUUsQ0FBQ0MsU0FBSCxhQUFrQnpCLElBQUksQ0FBQ3FCLFFBQUwsQ0FBY0MsWUFBZCxDQUEyQlIsS0FBN0MsY0FBc0RkLElBQUksQ0FBQ3FCLFFBQUwsQ0FBY0UsYUFBZCxDQUE0QlQsS0FBbEY7QUFDQUwsUUFBSSxDQUFDTSxNQUFMLENBQVlTLEVBQVo7QUFDQXhCLFFBQUksQ0FBQzBCLEtBQUw7QUFDQSxHQUxELE1BS087QUFDTkMsU0FBSyxDQUFDLGdCQUFELENBQUw7QUFDQTs7QUFDRFAsT0FBSyxDQUFDUSxjQUFOO0FBQ0EsQ0FWRCxFIiwiZmlsZSI6Im1haW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBmb3JtID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZm9ybScpO1xuY29uc3QgbGFiZWxFeHBlbnNlc1RleHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsYWJlbCcpO1xuY29uc3QgaW5wdXRFeHBlbnNlc1RleHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuY29uc3QgbGFiZWxFeHBlbnNlc1ZhbHVlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGFiZWwnKTtcbmNvbnN0IGlucHV0RXhwZW5zZXNWYWx1ZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG5jb25zdCBzdWJtaXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpbnB1dCcpO1xuY29uc3QgZGl2TGlzdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuY29uc3QgbGlzdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3VsJyk7XG5cbmxhYmVsRXhwZW5zZXNUZXh0Lmh0bWxGb3IgPSAnZXhwZW5zZXNUZXh0JztcbmxhYmVsRXhwZW5zZXNUZXh0LmlubmVyVGV4dCA9ICdTcGVudCBtb25leSBvbjonO1xuaW5wdXRFeHBlbnNlc1RleHQudHlwZSA9ICd0ZXh0JztcbmlucHV0RXhwZW5zZXNUZXh0Lm5hbWUgPSAnZXhwZW5zZXNUZXh0JztcbmxhYmVsRXhwZW5zZXNWYWx1ZS5odG1sRm9yID0gJ2V4cGVuc2VzVmFsdWUnO1xubGFiZWxFeHBlbnNlc1ZhbHVlLmlubmVyVGV4dCA9ICdBbW91bnQgb2YgbW9uZXk6JztcbmlucHV0RXhwZW5zZXNWYWx1ZS50eXBlID0gJ251bWJlcic7XG5pbnB1dEV4cGVuc2VzVmFsdWUubmFtZSA9ICdleHBlbnNlc1ZhbHVlJztcbnN1Ym1pdC50eXBlID0gJ3N1Ym1pdCc7XG5zdWJtaXQudmFsdWUgPSAnU3VibWl0JztcblxuZm9ybS5hcHBlbmQobGFiZWxFeHBlbnNlc1RleHQpO1xuZm9ybS5hcHBlbmQoZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYnInKSk7XG5mb3JtLmFwcGVuZChpbnB1dEV4cGVuc2VzVGV4dCk7XG5mb3JtLmFwcGVuZChkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdicicpKTtcbmZvcm0uYXBwZW5kKGxhYmVsRXhwZW5zZXNWYWx1ZSk7XG5mb3JtLmFwcGVuZChkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdicicpKTtcbmZvcm0uYXBwZW5kKGlucHV0RXhwZW5zZXNWYWx1ZSk7XG5mb3JtLmFwcGVuZChkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdicicpKTtcbmZvcm0uYXBwZW5kKGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2JyJykpO1xuZm9ybS5hcHBlbmQoc3VibWl0KTtcbmRpdkxpc3QuYXBwZW5kKGxpc3QpO1xuY29uc29sZS5sb2coZm9ybSk7XG5kb2N1bWVudC5ib2R5LmFwcGVuZChmb3JtKTtcbmRvY3VtZW50LmJvZHkuYXBwZW5kKGRpdkxpc3QpO1xuXG5mb3JtLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIChldmVudCkgPT4ge1xuXHRpZiAoZm9ybS5lbGVtZW50cy5leHBlbnNlc1RleHQudmFsdWUgJiYgZm9ybS5lbGVtZW50cy5leHBlbnNlc1ZhbHVlLnZhbHVlKSB7XG5cdFx0Y29uc3QgbGkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpO1xuXHRcdGxpLmlubmVySFRNTCA9IGAke2Zvcm0uZWxlbWVudHMuZXhwZW5zZXNUZXh0LnZhbHVlfSAke2Zvcm0uZWxlbWVudHMuZXhwZW5zZXNWYWx1ZS52YWx1ZX1gO1xuXHRcdGxpc3QuYXBwZW5kKGxpKTtcblx0XHRmb3JtLnJlc2V0KCk7XG5cdH0gZWxzZSB7XG5cdFx0YWxlcnQoJ0ludmFsaWQgaW5wdXQhJyk7XG5cdH1cblx0ZXZlbnQucHJldmVudERlZmF1bHQoKTtcbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==